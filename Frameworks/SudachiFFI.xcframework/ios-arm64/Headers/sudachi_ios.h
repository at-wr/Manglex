#ifndef SUDACHI_IOS_H
#define SUDACHI_IOS_H

/* Warning: This file is auto-generated by cbindgen. Do not modify. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

#ifdef __cplusplus
namespace sudachi_ios {
#endif  // __cplusplus

typedef enum SudachiSudachiTokenMode {
  A = 0,
  B = 1,
  C = 2,
} SudachiSudachiTokenMode;

typedef struct SudachiSudachiTokenizer SudachiSudachiTokenizer;

typedef struct SudachiSudachiToken {
  char *surface;
  char *reading;
  char *dictionary_form;
  char *normalized_form;
  char *pos;
  int32_t begin;
  int32_t end;
} SudachiSudachiToken;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

/**
 * Initialize Sudachi tokenizer with dictionary path
 * Returns NULL on failure
 */
struct SudachiSudachiTokenizer *sudachi_init(const char *DictPath);

/**
 * Tokenize text using Sudachi
 * Returns array of tokens (caller must free with sudachi_free_tokens)
 */
struct SudachiSudachiToken **sudachi_tokenize(struct SudachiSudachiTokenizer *Tokenizer, const char *Text, enum SudachiSudachiTokenMode Mode, uintptr_t *OutCount);

/**
 * Free a token
 */
void sudachi_free_token(struct SudachiSudachiToken *Token);

/**
 * Free array of tokens
 */
void sudachi_free_tokens(struct SudachiSudachiToken **Tokens, uintptr_t Count);

/**
 * Free tokenizer
 */
void sudachi_free_tokenizer(struct SudachiSudachiTokenizer *Tokenizer);

/**
 * Get version string
 */
const char *sudachi_version(void);

#ifdef __cplusplus
}  // extern "C"
#endif  // __cplusplus

#ifdef __cplusplus
}  // namespace sudachi_ios
#endif  // __cplusplus

#endif  /* SUDACHI_IOS_H */
